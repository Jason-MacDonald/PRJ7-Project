@page "/editchapter/{ChapterID:int}"
@inject NavigationManager navigationManager
@inject IChapterRepository chapterRepository 
@inject ILinkRepository linkRepository

<h3>Edit Chapter</h3>

@if (chapter != null)
{
    <div class="row">
        <div class="left-column">
            <ChapterForm Chapter="chapter" OnValidSubmit="SaveChapter" />
        </div>

        <div class="right-column">
            <div class="form-group">
                @foreach (var link in links)
                {
                    <a class="btn btn-warning btn-block" @onclick="@(() => NavEditLink(link.ID))">Edit @link.Description</a>
                }
                <a class="btn btn-info btn-block" @onclick="NavCreateLink">Create New Link</a>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public int ChapterID { get; set; }
    public Chapter chapter;
    public List<Link> links;

    protected async override Task OnInitializedAsync()
    {
        chapter = await chapterRepository.GetChapter(ChapterID);
        links = await linkRepository.GetLinks(ChapterID);
    }

    private void SaveChapter()
    {
        chapterRepository.UpdateChapter(chapter);
        Console.WriteLine("Chapter Saved");
    }

    private void NavEditLink(int id)
    {
        navigationManager.NavigateTo($"editlink/{chapter.AdventureID}/{id}");
    }

    private void NavCreateLink()
    {
        navigationManager.NavigateTo($"createlink/{chapter.AdventureID}/{chapter.ID}");
    }
}
