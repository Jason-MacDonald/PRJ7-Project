@page "/play/{adventureID:int}"

@inject IAdventureRepository adventureRepository

@if (_AdventureDTO != null)
{
    <div class="play mb-3">

        @* CHAPTER TITLE *@
        <h4>@_AdventureDTO.ChapterList[_CurrentChapter].Title</h4>

        @* CHAPTER IMAGE *@
        <img class="my-3" src="@_AdventureDTO.ChapterList[_CurrentChapter].Image" />

        @* CHAPTER DESCRIPTION *@
        <MarkdownPreview MarkdownContent="@_AdventureDTO.ChapterList[_CurrentChapter].Description" />

        @* CHAPTER EVENT *@
        <p><i>@_AdventureDTO.ChapterList[_CurrentChapter].Event</i></p>

        @* CHAPTER LINKS *@
        @foreach (var link in _AdventureDTO.ChapterList[_CurrentChapter].Links)
        {
            @if (link.Target != 0)
            {
                @* LINK BUTTON *@
                <button class="btn btn-primary btn-block" @onclick="(() => GoToChapter(link.Target))">@link.Target @link.Description</button>
            }
            else
            {
                <button class="btn btn-outline-primary btn-block">No target has been assigned for this link</button>
            }
        }
    </div>
}
else
{
    @* TODO: Handle errors *@
    <p>something's wrong</p>
}

@code {

    #region ##### HEAD #####

    [Parameter] public int adventureID { get; set; }

    private AdventureDTO _AdventureDTO;
    private int _CurrentChapter = 0;

    #endregion

    #region ##### LIFECYCLE METHODS #####

    protected async override Task OnInitializedAsync()
    {
        // TODO: Move to CRUD METHODS (necessary?)
        try
        {
            _AdventureDTO = await adventureRepository.GetAdventureDTO(adventureID);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.GetBaseException().ToString());
            Console.WriteLine("PLY001: Unable to Retrieve Adventure.");
        }
    }

    #endregion

    #region ##### GENERAL METHODS #####

    public void GoToChapter(int target)
    {
        // Find the target chapters index in the the _Adventure.ChapterList
        target = _AdventureDTO.ChapterList.FindIndex(x => x.ID == target);
        _CurrentChapter = target;
    }

    #endregion

}
