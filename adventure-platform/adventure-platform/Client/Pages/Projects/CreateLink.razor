@page "/createlink/{AdventureID:int}/{ChapterID:int}"

@inject ILinkRepository linkRepository
@inject IChapterRepository chapterRepository

@inject NavigationManager navigationManager 

@attribute [Authorize]

<div class="row">

    @* LEFT COLUMN *@
    <div class="left-column">

        <h3>CreateLink</h3>

        <LinkForm Link="_Link" OnValidSubmit="SaveLink" Back="NavEditChapter"/>

    </div>

    @* RIGHT COLUMN *@
    <div class="right-column">

        @* CHAPTER LIST - Used to apply target. *@
        <div class="form-group">
            @if (_Chapters != null)
            {
                @foreach (var chapter in _Chapters)
                {
                    <a class="btn btn-warning btn-block">Set @chapter.Title as Target</a>
                }
            }
        </div>

    </div>

</div>

@code {

    #region ##### HEAD #####

    [Parameter] public int AdventureID { get; set; }
    [Parameter] public int ChapterID { get; set; }

    private List<Chapter> _Chapters;
    private Link _Link = new Link();

    #endregion

    #region ##### LIFECYCLE METHODS #####

    protected async override Task OnInitializedAsync()
    {
        try
        {
            _Chapters = await chapterRepository.GetChapters(AdventureID);
        }
        catch (Exception)
        {

            throw;
        }

    }

    #endregion

    #region ##### CRUD METHODS #####

    private async Task SaveLink()
    {
        _Link.ChapterID = ChapterID;

        try
        {
            var linkID = await linkRepository.CreateLink(_Link);
            navigationManager.NavigateTo($"editlink/{AdventureID}/{linkID}");
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.GetBaseException().ToString());
            Console.WriteLine("CLK001: Unable to Save Link.");
        }
    }

    #endregion

    #region ##### NAVIGATION #####

    public void NavEditChapter()
    {
        navigationManager.NavigateTo($"editchapter/{ChapterID}");
    }

    #endregion

}
