@page "/login"

@inject IAccountRepository accountRepository

@inject ILoginService loginService

@using adventureplatform.Client.Auth

<h3>Login</h3>

<EditForm Model="_UserInfo" OnValidSubmit="Login">
    <DataAnnotationsValidator />

    @* ##### EMAIL INPUT ##### *@
    <div class="form-group">
        <label>Email:</label>
        <div>
            <InputText class="form-control" @bind-Value="@_UserInfo.Email" />
            <ValidationMessage For="@(() => _UserInfo.Email)" />
        </div>
    </div>

    @* ##### PASSWORD INPUT ##### *@
    <div class="form-group">
        <label>Password:</label>
        <div>
            <InputPassword class="form-control" @bind-Value="@_UserInfo.Password" />
            <ValidationMessage For="@(() => _UserInfo.Password)" />
        </div>
    </div>

    @* ##### REGISTER BUTTON ##### *@
    <button type="submit" class="btn btn-primary">Login</button>

</EditForm>

@code {

    #region ##### HEAD #####

    [Parameter] public EventCallback Done { get; set; }

    private UserInfo _UserInfo = new UserInfo();

    #endregion

    #region ##### LOGIN #####

    private async Task Login()
    {
        try
        {
            var userToken = await accountRepository.Login(_UserInfo);
            await loginService.Login(userToken.Token);
            await Done.InvokeAsync(null);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.GetBaseException().ToString());
            Console.WriteLine("LIF001: Unable to login to the server.");
        }
    }

    #endregion

}
