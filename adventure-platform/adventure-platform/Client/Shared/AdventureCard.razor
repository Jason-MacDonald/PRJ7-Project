@inject NavigationManager navigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IUserFavouriteRepository userFavouriteRepository 
@inject IAdventureRepository adventureRepository

<div class="individual-adventure-container shadow mb-4 bg-white">
    <div>
        <div class="individual-adventure-header">
            <h5 class="pt-4 px-3">@Adventure.Title</h5>
            <p class="pb-3 px-3"><i>@Adventure.Author</i></p>
        </div>

        @if (Adventure.Image != null)
        {
            <a>
                <img src="@Adventure.Image"
                     class="adventure-image" />
            </a>
        }

        <p class="px-3">@Adventure.Description</p>
    </div>
    <div>
        <div class="px-3 pb-3">
            <a class="btn btn-success" @onclick="NavPlay"><span class="oi oi-media-play" aria-hidden="true"></span></a>

            <AuthorizeView>
                <Authorized>
                    @if (ContextString == "adventures")
                    {
                        <a class="btn btn-info" @onclick="AddToLibrary"><span class="oi oi-plus" aria-hidden="true"></span></a>
                    }
                </Authorized>
            </AuthorizeView>


            @if (ContextString == "mylibrary")
            {
                <a class="btn btn-warning" @onclick="@(() => DeleteFromLibrary.InvokeAsync(Adventure.ID))"><span class="oi oi-minus" aria-hidden="true"></span></a>
            }


            @if (ContextString == "myprojects")
            {

            }

            <AuthorizeView>
                <Authorized>

                    @if (ContextString == "myprojects")
                    {
                        @if (userEmail == Adventure.Author)
                        {
                            <div class="float-right">
                                <a class="btn btn-warning" @onclick="NavEditProject"><span class="oi oi-pencil" aria-hidden="true" /></a>
                                <button type="button"
                                        class="btn btn-danger"
                                        @onclick="@(() => DeleteAdventure.InvokeAsync(Adventure))">
                                    <span class="oi oi-trash" aria-hidden="true" />
                                </button>
                            </div>
                        }
                    }

                </Authorized>
            </AuthorizeView>

        </div>
    </div>
</div>

@code {

    #region ##### HEAD #####
    private string userEmail = "";

    [Parameter] public string ContextString { get; set; }

    [Parameter] public Adventure Adventure { get; set; }
    [Parameter] public EventCallback<Adventure> DeleteAdventure { get; set; }
    [Parameter] public EventCallback<int> DeleteFromLibrary { get; set; }

    #endregion

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        userEmail = authState.User.Identity.Name;
    }

    private async Task AddToLibrary()
    {
        try
        {
            UserFavourite userFavourite = new UserFavourite()
            {
                UserID = userEmail,
                AdventureID = Adventure.ID
            };

            await userFavouriteRepository.CreateUserFavourite(userFavourite);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    //private async Task DeleteFromLibrary()
    //{
    //    try
    //    {
    //        UserFavourite userFavourite = new UserFavourite()
    //        {
    //            UserID = userEmail,
    //            AdventureID = Adventure.ID
    //        };

    //        await userFavouriteRepository.DeleteUserFavourite(userFavourite);
    //    }
    //    catch (Exception ex)
    //    {
    //        Console.WriteLine(ex.Message);
    //    }
    //}

    #region ##### NAVIGATION #####

    private void NavPlay()
    {
        navigationManager.NavigateTo($"play/{Adventure.ID}");
    }

    private void NavEditProject()
    {
        navigationManager.NavigateTo($"editproject/{Adventure.ID}");
    }

    #endregion


}
