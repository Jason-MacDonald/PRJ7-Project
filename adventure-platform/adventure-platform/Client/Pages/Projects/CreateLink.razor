@page "/createlink/{AdventureID:int}/{ChapterID:int}"

@inject ILinkRepository linkRepository
@inject IChapterRepository chapterRepository

@inject NavigationManager navigationManager 

@attribute [Authorize]

<div class="row">
    <div class="left-column">

        <h3>CreateLink</h3>

        <LinkForm Link="link" OnValidSubmit="SaveLink" />

    </div>
    <div class="right-column">
        <div class="form-group">

            @if (chapters != null)
            {
                @foreach (var chapter in chapters)
                {
                    <a class="btn btn-warning btn-block">Set @chapter.Title as Target</a>
                }
            }

        </div>
    </div>
</div>


@code {

    #region ##### HEAD #####

    [Parameter] public int AdventureID { get; set; }
    [Parameter] public int ChapterID { get; set; }

    private List<Chapter> chapters;

    private Link link = new Link();

    #endregion

    #region ##### LIFECYCLE METHODS #####

    protected async override Task OnInitializedAsync()
    {
        chapters = await chapterRepository.GetChapters(AdventureID);
    }

    #endregion

    #region ##### CRUD METHODS #####

    private async Task SaveLink()
    {
        link.ChapterID = ChapterID;

        try
        {
            var linkID = await linkRepository.CreateLink(link);
            navigationManager.NavigateTo($"editlink/{AdventureID}/{linkID}");
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    #endregion

}
