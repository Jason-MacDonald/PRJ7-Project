@inject NavigationManager navigationManager
@inject IAdventureRepository adventureRepository
@inject IJSRuntime js
@*<input type="checkbox" @bind="@isOwner" />*@

<div class="adventures-container">
    @if (ProjectContext)
    {
        <button class="btn btn-info mr-3 create-project-button" @onclick="NavCreateProject">Create New Project</button>
    }

    <GenericList List="Adventures">
        <EmptyTemplate>
            <p>There are no adventures to show.</p>
        </EmptyTemplate>
        <ElementTemplate>
            <AdventureCard @key="context.ID" Adventure="context" DeleteAdventure="DeleteAdventure" />
        </ElementTemplate>
    </GenericList>
</div>

@code {
    [Parameter] public List<Adventure> Adventures { get; set; }
    [Parameter] public bool ProjectContext { get; set; }

    public async Task DeleteAdventure(Adventure adventure)
    {
        var confirm = await js.Confirm($"Are you sure you want to delete {adventure.Title}?");

        if(confirm == true)
        {
            await adventureRepository.DeleteAdventure(adventure.ID);
            Adventures.Remove(adventure);
        }
    }

    private void NavCreateProject()
    {
        navigationManager.NavigateTo($"createproject");
    }
}
