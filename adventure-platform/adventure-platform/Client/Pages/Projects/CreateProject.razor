@page "/createproject"
@inject NavigationManager navigationManager
@inject IAdventureRepository adventureRepository
@inject IGenreRepository genreRepository
@attribute [Authorize]

@if (NotSelectedGenres != null)
{
    <div class="row">
        <div class="left-column">
            <h3>Create Project</h3>
            <ProjectForm Project="project" OnValidSubmit="SaveProject" NotSelectedGenres="NotSelectedGenres" />
        </div>

        <div class="right-column">
            <h3>Chapters</h3>
            <div class="form-group">
                <a class="btn btn-info btn-block" @onclick="NavCreateChapter">Create New Chapter</a>
            </div>
        </div>
    </div>
}

@code {
    private Adventure project = new Adventure();
    private List<Genre> NotSelectedGenres;

    #region ##### LIFE CYCLE #####

    protected override async Task OnInitializedAsync()
    {
        NotSelectedGenres = await genreRepository.GetGenres();
    }

    #endregion

    #region ##### CRUD #####

    private async Task SaveProject()
    {
        try
        {
            await adventureRepository.CreateAdventure(project);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    #endregion

    #region ##### NAVIGATION ####

    public void NavCreateChapter()
    {
        navigationManager.NavigateTo($"createchapter/{project.ID}");
    }

    #endregion
}
