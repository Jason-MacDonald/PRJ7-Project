@page "/account"

@inject AuthenticationStateProvider AuthenticationStateProvider

    <AuthorizeView>

        @* USER IS LOGGED IN *@
        <Authorized>
            <h3>Account</h3>
            <p>@_UserEmail</p>
        </Authorized>

        @* USER IS NOT LOGGED IN *@
        <NotAuthorized>
            @* Done = Event callback which runs when login form is submitted - Currently updates user information.*@
            <LoginForm Done="UpdateAccountInfo" />
        </NotAuthorized>

    </AuthorizeView>


    @* ##### ADMINISTRATION PANEL ##### *@
    <AuthorizeView Roles="Admin">

        @* USER IS LOGGED IN AND HAS 'Admin' ROLE *@
        <Authorized>
            <a class="btn btn-info" href="genres">Edit Genres</a>
            <a class="btn btn-info" href="users">Edit Users</a>
        </Authorized>

    </AuthorizeView>

@code {

    #region ##### HEAD #####

    private string _UserEmail;

    #endregion

    #region ##### LIFECYCLE METHODS #####

    protected async override void OnInitialized()
    {
        await UpdateAccountInfo();
    }

    #endregion

    #region ##### AUTHENTICATION #####

    public async Task UpdateAccountInfo()
    {
        try
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            _UserEmail = authState.User.Identity.Name;
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.GetBaseException().ToString());
            Console.WriteLine("ACC001: Unable to Authenticate User.");
        }
    }

    #endregion

}
